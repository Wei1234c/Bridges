----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_i_format_type_descriptor;
CREATE TABLE type_i_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    bSubslotSize VARCHAR,
    bBitResolution VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_ii_format_type_descriptor;
CREATE TABLE type_ii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    wMaxBitRate VARCHAR,
    wSlotsPerFrame VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_iii_format_type_descriptor;
CREATE TABLE type_iii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    bSubslotSize VARCHAR,
    bBitResolution VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS type_iv_format_type_descriptor;
CREATE TABLE type_iv_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_i_format_type_descriptor;
CREATE TABLE extended_type_i_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    bSubslotSize VARCHAR,
    bBitResolution VARCHAR,
    bHeaderLength VARCHAR,
    bControlSize VARCHAR,
    bSideBandProtocol VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_ii_format_type_descriptor;
CREATE TABLE extended_type_ii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    wMaxBitRate VARCHAR,
    wSamplesPerFrame VARCHAR,
    bHeaderLength VARCHAR,
    bSideBandProtocol VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS extended_type_iii_format_type_descriptor;
CREATE TABLE extended_type_iii_format_type_descriptor (
    id INTEGER PRIMARY KEY,
    bLength VARCHAR,
    bDescriptorType VARCHAR,
    bDescriptorSubtype VARCHAR,
    bFormatType VARCHAR,
    bSubslotSize VARCHAR,
    bBitResolution VARCHAR,
    bHeaderLength VARCHAR,
    bSideBandProtocol VARCHAR);
PRAGMA foreign_keys = on;


----------------------------------------------------------
PRAGMA foreign_keys = off;
DROP TABLE IF EXISTS hi_res_presentation_timestamp_layout;
CREATE TABLE hi_res_presentation_timestamp_layout (
    id INTEGER PRIMARY KEY,
    bmFlags VARCHAR,
    qNanoSeconds VARCHAR);
PRAGMA foreign_keys = on;
